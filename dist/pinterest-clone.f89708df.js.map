{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,mBAAmB,SAAS,cAAc,CAAC;IACjD,MAAM,oBAAoB,SAAS,cAAc,CAAC;IAClD,MAAM,iBAAiB,SAAS,cAAc,CAAC;IAC/C,MAAM,YAAY,SAAS,cAAc,CAAC;IAE1C,gCAAgC;IAChC,IAAI,SAAS,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,cAAc,EAAE;IAC7D;IAEA,8BAA8B;IAC9B,eAAe,gBAAgB,CAAC,SAAS;QACrC,MAAM,YAAY,iBAAiB,KAAK,CAAC,EAAE;QAC3C,MAAM,eAAe,kBAAkB,KAAK,CAAC,IAAI;QAEjD,IAAI,WAAW;YACX,MAAM,SAAS,IAAI;YAEnB,OAAO,MAAM,GAAG,CAAC;gBACb,MAAM,WAAW,MAAM,MAAM,CAAC,MAAM,EAAE,WAAW;gBAEjD,kCAAkC;gBAClC,MAAM,MAAM,IAAI;gBAEhB,IAAI,MAAM,GAAG;oBAET,MAAM,WAAW;wBACb,KAAK;wBACL,SAAS;oBACb;oBAEA,OAAO,IAAI,CAAC;oBACZ,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;oBAC9C;oBAEA,iBAAiB,KAAK,GAAG,IAAI,uBAAuB;oBACpD,kBAAkB,KAAK,GAAG;gBAC9B;gBAEA,IAAI,OAAO,GAAG;oBACV,MAAM;gBACV;gBACA,IAAI,GAAG,GAAG;YACd;YAEA,OAAO,aAAa,CAAC,YAAY,8BAA8B;QACnE,OACI,MAAM;IAEd;IAEA,wCAAwC;IACxC,SAAS;QACL,UAAU,SAAS,GAAG;QACtB,OAAO,OAAO,CAAC,CAAC,OAAO;YACnB,MAAM,YAAY,SAAS,aAAa,CAAC;YACzC,UAAU,SAAS,CAAC,GAAG,CAAC;YAExB,MAAM,aAAa,SAAS,aAAa,CAAC;YAC1C,WAAW,GAAG,GAAG,MAAM,GAAG;YAC1B,WAAW,GAAG,GAAG,CAAC,MAAM,EAAE,QAAQ,GAAG;YAErC,MAAM,iBAAiB,SAAS,aAAa,CAAC;YAC9C,eAAe,WAAW,GAAG,MAAM,OAAO,IAAI;YAE9C,uBAAuB;YACvB,MAAM,eAAe,SAAS,aAAa,CAAC;YAC5C,aAAa,SAAS,CAAC,GAAG,CAAC;YAC3B,aAAa,WAAW,GAAG;YAC3B,aAAa,gBAAgB,CAAC,SAAS,CAAC;gBACpC,MAAM,eAAe,IAAI,iCAAiC;gBAC1D,YAAY;YAChB;YAEA,UAAU,WAAW,CAAC;YACtB,UAAU,WAAW,CAAC;YACtB,UAAU,WAAW,CAAC,eAAe,oBAAoB;YACzD,UAAU,WAAW,CAAC;QAC1B;IACJ;IAEA,SAAS,YAAY,KAAK;QACtB,OAAO,MAAM,CAAC,OAAO,IAAI,0BAA0B;QACnD,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU,sBAAsB;QAC9E,gBAAgB,qBAAqB;IACzC;AACJ","sources":["src/js/list.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const imageUploadInput = document.getElementById('image-upload');\r\n    const imageCaptionInput = document.getElementById('image-caption');\r\n    const addImageButton = document.getElementById('add-image');\r\n    const imageGrid = document.getElementById('image-grid');\r\n\r\n    // Load images from localStorage\r\n    let images = JSON.parse(localStorage.getItem('images')) || [];\r\n    renderImages();\r\n\r\n    // Function to add a new image\r\n    addImageButton.addEventListener('click', () => {\r\n        const imageFile = imageUploadInput.files[0];\r\n        const imageCaption = imageCaptionInput.value.trim();\r\n\r\n        if (imageFile) {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = (event) => {\r\n                const imageUrl = event.target.result; // Data URL\r\n\r\n                // Create a temporary image object\r\n                const img = new Image();\r\n\r\n                img.onload = () => { // Ensure the image is loaded before using it\r\n\r\n                    const newImage = {\r\n                        url: imageUrl,\r\n                        caption: imageCaption\r\n                    };\r\n\r\n                    images.push(newImage);\r\n                    localStorage.setItem('images', JSON.stringify(images));\r\n                    renderImages();\r\n\r\n                    imageUploadInput.value = ''; // Clear the file input\r\n                    imageCaptionInput.value = '';\r\n                };\r\n\r\n                img.onerror = () => { // Handle potential image loading errors\r\n                    alert(\"Error loading image.\");\r\n                };\r\n                img.src = imageUrl;\r\n            };\r\n\r\n            reader.readAsDataURL(imageFile); // Read the file as a data URL\r\n        } else {\r\n            alert('Please select an image file.');\r\n        }\r\n    });\r\n\r\n    // Function to render images in the grid\r\n    function renderImages() {\r\n        imageGrid.innerHTML = '';\r\n        images.forEach((image, index) => {\r\n            const imageItem = document.createElement('div');\r\n            imageItem.classList.add('image-item');\r\n\r\n            const imgElement = document.createElement('img');\r\n            imgElement.src = image.url;\r\n            imgElement.alt = `Image ${index + 1}`;\r\n\r\n            const captionElement = document.createElement('p');\r\n            captionElement.textContent = image.caption || \"No caption\";\r\n\r\n            // Create delete button\r\n            const deleteButton = document.createElement('button');\r\n            deleteButton.classList.add('delete-button');\r\n            deleteButton.textContent = 'X';\r\n            deleteButton.addEventListener('click', (event) => {\r\n                event.stopPropagation(); // Prevent click from bubbling up\r\n                deleteImage(index);\r\n            });\r\n\r\n            imageItem.appendChild(imgElement);\r\n            imageItem.appendChild(captionElement);\r\n            imageItem.appendChild(deleteButton); // Add delete button\r\n            imageGrid.appendChild(imageItem);\r\n        });\r\n    }\r\n\r\n    function deleteImage(index) {\r\n        images.splice(index, 1); // Remove image from array\r\n        localStorage.setItem('images', JSON.stringify(images)); // Update localStorage\r\n        renderImages(); // Re-render the grid\r\n    }\r\n});"],"names":[],"version":3,"file":"pinterest-clone.f89708df.js.map","sourceRoot":"/__parcel_source_root/"}